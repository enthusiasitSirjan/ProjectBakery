/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;
import java.util.ArrayList;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sirjan
 */
public class bakery extends javax.swing.JFrame {

    
    
    /**
     * Creates new form NewJFrame
     */
    public bakery() {
        initComponents();
        setColor(homeBtn);
        resetColor(new JPanel[]{tableBtn,itemBtn});
        setVisible(true);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        categoryGroup = new javax.swing.ButtonGroup();
        toppingGroup = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        itemBtn = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        homeBtn = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tableBtn = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        bakeryName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        phnNumber = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        centerPanel = new javax.swing.JPanel();
        home = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        bakeryItem = new javax.swing.JPanel();
        deleteBtn = new javax.swing.JButton();
        binarySearch = new javax.swing.JTextField();
        btnBinary = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        btnCake = new javax.swing.JRadioButton();
        btnMuffins = new javax.swing.JRadioButton();
        btnCookies = new javax.swing.JRadioButton();
        btnBreads = new javax.swing.JRadioButton();
        btnDoughnuts = new javax.swing.JRadioButton();
        btnBrownies = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        addItem = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        itemName = new javax.swing.JTextField();
        itemIngredients = new javax.swing.JTextField();
        itemQuantity = new javax.swing.JTextField();
        itemPrice = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        comboCategory = new javax.swing.JComboBox<>();
        fF = new javax.swing.JCheckBox();
        wC = new javax.swing.JCheckBox();
        hC = new javax.swing.JCheckBox();
        jLabel21 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenu = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Delicious Bakery");
        setLocation(new java.awt.Point(250, 50));
        setResizable(false);

        jPanel3.setBackground(new java.awt.Color(204, 51, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(142, 67, 50));

        itemBtn.setBackground(new java.awt.Color(153, 51, 0));
        itemBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bakery.this.mouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                itemBtnMousePressed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_purchase_order_25px.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ITEM ENROLLMENT");

        javax.swing.GroupLayout itemBtnLayout = new javax.swing.GroupLayout(itemBtn);
        itemBtn.setLayout(itemBtnLayout);
        itemBtnLayout.setHorizontalGroup(
            itemBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemBtnLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18))
        );
        itemBtnLayout.setVerticalGroup(
            itemBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemBtnLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(itemBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        homeBtn.setBackground(new java.awt.Color(153, 51, 0));
        homeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bakery.this.mouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                homeBtnMousePressed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_home_page_25px.png"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("HOME");

        javax.swing.GroupLayout homeBtnLayout = new javax.swing.GroupLayout(homeBtn);
        homeBtn.setLayout(homeBtnLayout);
        homeBtnLayout.setHorizontalGroup(
            homeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeBtnLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        homeBtnLayout.setVerticalGroup(
            homeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeBtnLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(homeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableBtn.setBackground(new java.awt.Color(153, 51, 0));
        tableBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bakery.this.mouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableBtnMousePressed(evt);
            }
        });

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_bulleted_list_25px_2.png"))); // NOI18N

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("BAKERY ITEMS");

        javax.swing.GroupLayout tableBtnLayout = new javax.swing.GroupLayout(tableBtn);
        tableBtn.setLayout(tableBtnLayout);
        tableBtnLayout.setHorizontalGroup(
            tableBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableBtnLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        tableBtnLayout.setVerticalGroup(
            tableBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableBtnLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(tableBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bakeryName.setFont(new java.awt.Font("Castellar", 3, 36)); // NOI18N
        bakeryName.setForeground(new java.awt.Color(255, 255, 255));
        bakeryName.setText("DELICIOUS BAKERY");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_marker_20px.png"))); // NOI18N

        address.setForeground(new java.awt.Color(255, 255, 255));
        address.setText("Durbarmarg, Kathmandu");

        phnNumber.setForeground(new java.awt.Color(255, 255, 255));
        phnNumber.setText("01-4437165");

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_phone_20px.png"))); // NOI18N

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_email_send_20px.png"))); // NOI18N

        email.setForeground(new java.awt.Color(255, 255, 255));
        email.setText("deliciousbakery@gmail.com");

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/source.gif"))); // NOI18N
        jLabel24.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel25.setFont(new java.awt.Font("Dosis", 2, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("\"WE CREATE DELICIOUS MEMORIES.....\"");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(tableBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(itemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bakeryName, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(phnNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phnNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                                    .addComponent(email, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bakeryName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel25))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tableBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 960, 210));

        centerPanel.setLayout(new java.awt.CardLayout());

        home.setBackground(new java.awt.Color(210, 153, 108));

        jLabel4.setFont(new java.awt.Font("Vivaldi", 3, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("The Delicious Bakery crafts all of our baked treats from scratch fresh natural ingredients.");

        jLabel8.setFont(new java.awt.Font("Vivaldi", 3, 24)); // NOI18N
        jLabel8.setText("For the most discering sweet tooth, we offer customcakes, specialty cakes,");

        jLabel13.setFont(new java.awt.Font("Vivaldi", 3, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Cupcakes, Cake pops, French Macarons, Decorated Cookies,");

        jLabel16.setFont(new java.awt.Font("Vivaldi", 3, 24)); // NOI18N
        jLabel16.setText("Chocolate Dipped Pretzel and Decorated ");

        jLabel18.setFont(new java.awt.Font("Vivaldi", 3, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Rice cripies Treats!");

        jLabel23.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 36)); // NOI18N
        jLabel23.setText("WELCOME !");

        javax.swing.GroupLayout homeLayout = new javax.swing.GroupLayout(home);
        home.setLayout(homeLayout);
        homeLayout.setHorizontalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeLayout.createSequentialGroup()
                .addGap(0, 102, Short.MAX_VALUE)
                .addGroup(homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeLayout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeLayout.createSequentialGroup()
                        .addGroup(homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(164, 164, 164))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeLayout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeLayout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(322, 322, 322))))
        );
        homeLayout.setVerticalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeLayout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addComponent(jLabel23)
                .addGap(31, 31, 31)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        centerPanel.add(home, "card4");

        bakeryItem.setBackground(new java.awt.Color(195, 124, 77));

        deleteBtn.setText("Delete");
        deleteBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        btnBinary.setText("Search by Price");
        btnBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBinaryActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(240, 240, 240));
        jLabel22.setText("View Items  :");

        categoryGroup.add(btnCake);
        btnCake.setForeground(new java.awt.Color(240, 240, 240));
        btnCake.setText("Cakes");
        btnCake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCakeActionPerformed(evt);
            }
        });

        categoryGroup.add(btnMuffins);
        btnMuffins.setForeground(new java.awt.Color(240, 240, 240));
        btnMuffins.setText("Muffins");
        btnMuffins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMuffinsActionPerformed(evt);
            }
        });

        categoryGroup.add(btnCookies);
        btnCookies.setForeground(new java.awt.Color(240, 240, 240));
        btnCookies.setText("Cookies");
        btnCookies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCookiesActionPerformed(evt);
            }
        });

        categoryGroup.add(btnBreads);
        btnBreads.setForeground(new java.awt.Color(240, 240, 240));
        btnBreads.setText("Breads");
        btnBreads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBreadsActionPerformed(evt);
            }
        });

        categoryGroup.add(btnDoughnuts);
        btnDoughnuts.setForeground(new java.awt.Color(240, 240, 240));
        btnDoughnuts.setText("Doughnuts");
        btnDoughnuts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoughnutsActionPerformed(evt);
            }
        });

        categoryGroup.add(btnBrownies);
        btnBrownies.setForeground(new java.awt.Color(240, 240, 240));
        btnBrownies.setText("Brownies");
        btnBrownies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowniesActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Butter cake","Cakes","Butter","3","120","French Fries"},
                {"Sponge cake","Cakes","Curd","2","150","Hot Chocolate"},
                {"Honey Muffins","Muffins","Honey","3","100","French Fries"},
                {"Apple-Cinnamon Muffins","Muffins","Apple-cider","4","250","Hot Chocolate"},
                {"Snickerdoodles","Cookies","Cinnamon","5","50","Hot Chocolate"},
                {"Chocolate Chip Cookies","Cookies","Chocolate","6","70","Whipping Cream"},
                {"Whole-Wheat Bread","Breads","Wheat","10","100","French Fries"},
                {"Rye Bread", "Breads","Rye Flour","5","50","Whipping Cream"},
                {"Glazed Doughnut","Doughnuts","Glaze","2","100","Hot Chocolate"},
                {"Strawberry Frosted Doughnut","Doughnuts","Strawberry","1","100","Whipping Cream"},
                {"Cream Cheese Brownies","Brownies","Cheese","5","500","Hot Chocolate"},
                {"Sweet and Salty Brownies","Brownies","Caramel Sauce","2","50","French Fries"}
            },
            new String [] {
                "ITEM NAME", "CATEGORY", "STAR INGREDIENT", "QUANTITY", "PRICE", "TOPPINGS"
            }
        ));
        jTable.setGridColor(new java.awt.Color(255, 255, 255));
        jTable.getTableHeader().setReorderingAllowed(false);
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable);

        javax.swing.GroupLayout bakeryItemLayout = new javax.swing.GroupLayout(bakeryItem);
        bakeryItem.setLayout(bakeryItemLayout);
        bakeryItemLayout.setHorizontalGroup(
            bakeryItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(bakeryItemLayout.createSequentialGroup()
                .addGroup(bakeryItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(bakeryItemLayout.createSequentialGroup()
                        .addGroup(bakeryItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bakeryItemLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(binarySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(btnBinary)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnCake)
                                .addGap(30, 30, 30)
                                .addComponent(btnMuffins)
                                .addGap(32, 32, 32)
                                .addComponent(btnCookies)
                                .addGap(16, 16, 16)
                                .addComponent(btnBreads)
                                .addGap(18, 18, 18)
                                .addComponent(btnDoughnuts)
                                .addGap(18, 18, 18)
                                .addComponent(btnBrownies))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bakeryItemLayout.createSequentialGroup()
                                .addGap(382, 382, 382)
                                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 63, Short.MAX_VALUE)))
                .addContainerGap())
        );
        bakeryItemLayout.setVerticalGroup(
            bakeryItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bakeryItemLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(bakeryItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCake)
                    .addComponent(btnMuffins)
                    .addComponent(btnCookies)
                    .addComponent(btnBreads)
                    .addComponent(btnDoughnuts)
                    .addComponent(btnBrownies)
                    .addComponent(jLabel22)
                    .addComponent(btnBinary)
                    .addComponent(binarySearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        centerPanel.add(bakeryItem, "card3");

        addItem.setBackground(new java.awt.Color(235, 204, 171));

        jPanel2.setBackground(new java.awt.Color(128, 71, 28));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("ITEM NAME");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("CATEGORY");

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("STAR INGREDIENTS");

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("QUANTITY");

        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("PRICE");

        itemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemNameKeyPressed(evt);
            }
        });

        itemIngredients.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemIngredientsKeyPressed(evt);
            }
        });

        itemQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemQuantityKeyPressed(evt);
            }
        });

        itemPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemPriceKeyPressed(evt);
            }
        });

        addBtn.setText("Add");
        addBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");
        clearBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        comboCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category", "Cakes", "Muffins", "Breads", "Cookies", "Doughnuts", "Brownies" }));

        toppingGroup.add(fF);
        fF.setForeground(new java.awt.Color(255, 255, 255));
        fF.setText("French Fries");
        fF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fFActionPerformed(evt);
            }
        });

        toppingGroup.add(wC);
        wC.setForeground(new java.awt.Color(255, 255, 255));
        wC.setText("Whipping Cream");

        toppingGroup.add(hC);
        hC.setForeground(new java.awt.Color(255, 255, 255));
        hC.setText("Hot Chocolate");

        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("TOPPINGS");

        backBtn.setText("Back");
        backBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(itemQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                .addComponent(itemPrice))
                            .addComponent(itemName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboCategory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemIngredients, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(fF, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wC)
                            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hC, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemIngredients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fF)
                        .addComponent(wC)
                        .addComponent(hC)))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addItemLayout = new javax.swing.GroupLayout(addItem);
        addItem.setLayout(addItemLayout);
        addItemLayout.setHorizontalGroup(
            addItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(202, Short.MAX_VALUE))
        );
        addItemLayout.setVerticalGroup(
            addItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemLayout.createSequentialGroup()
                .addGroup(addItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addItemLayout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(jLabel7))
                    .addGroup(addItemLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        centerPanel.add(addItem, "card4");

        jPanel3.add(centerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 950, 360));

        jMenuBar1.setBackground(new java.awt.Color(255, 102, 51));
        jMenuBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuBar1.setForeground(new java.awt.Color(255, 102, 51));

        fileMenu.setText("File");

        openMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenu.setText("Open");
        openMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuActionPerformed(evt);
            }
        });
        fileMenu.add(openMenu);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem2);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Help");

        helpMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        helpMenu.setText("Help");
        helpMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuActionPerformed(evt);
            }
        });
        editMenu.add(helpMenu);

        jMenuBar1.add(editMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 948, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBtnMousePressed
       
        setColor(tableBtn); // sets color of bakery items pannel
        resetColor(new JPanel[]{homeBtn,itemBtn}); // resets the color of remaining pannel
         
    }//GEN-LAST:event_tableBtnMousePressed

    private void itemBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemBtnMousePressed
        
        setColor(itemBtn); // sets color of item enrollment pannel
        resetColor(new JPanel[]{homeBtn,tableBtn}); // resets the color of remaining pannel
        
    }//GEN-LAST:event_itemBtnMousePressed

    private void homeBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMousePressed

        setColor(homeBtn); // sets color of home pannel
        resetColor(new JPanel[]{tableBtn,itemBtn}); // resets the color of remaining pannel
        
        
    }//GEN-LAST:event_homeBtnMousePressed

    private void mouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseClicked

        if(evt.getSource()==homeBtn){ // if home button is clicked
            home.setVisible(true); // visbile the home pannel
            addItem.setVisible(false); // hide the item enrollment pannel
            bakeryItem.setVisible(false); // hide the bakery items pannel
        }
        if(evt.getSource()==itemBtn){ // if item button is clicked
            home.setVisible(false); // visbile the home pannel
            addItem.setVisible(true); // hide the item enrollment pannel
            bakeryItem.setVisible(false); // hide the bakery items pannel
        }
        if(evt.getSource()==tableBtn){ // if table button is clicked 
            home.setVisible(false); // hide the home pannel
            addItem.setVisible(false); // hide the item enrollment pannel
            bakeryItem.setVisible(true); // visbile the bakery items pannel
        }
    }//GEN-LAST:event_mouseClicked

    private void itemNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemNameKeyPressed
        String b=itemName.getText(); // gets text from itemName textfield
        if (b.length()==0){ // check length of text entered in a textfield
            int a=evt.getKeyCode();
            if(a==32){
                itemName.setEditable(false);
            }else{
                itemName.setEditable(true);
            }
        }
    }//GEN-LAST:event_itemNameKeyPressed

    private void itemIngredientsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemIngredientsKeyPressed
        String b=itemIngredients.getText();
        if (b.length()==0){
            int a=evt.getKeyCode();
            if(a==32){                                          // checking backspaces 
                itemIngredients.setEditable(false);
            }else{
                itemIngredients.setEditable(true);
            }
        }
    }//GEN-LAST:event_itemIngredientsKeyPressed

    private void itemQuantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemQuantityKeyPressed
        char dat=evt.getKeyChar();
        System.out.println(dat);

        if(Character.isLetter(dat)){
            itemQuantity.setEditable(false);
        }else{
            itemQuantity.setEditable(true);                 //checking characters
        }
        int c=evt.getKeyCode();
        if(!(c>47 && c<58 || c==8)){
            itemQuantity.setEditable(false);
            message("Enter Number only");
            itemQuantity.setEditable(true);                 //validate numbers
        }else{
            System.out.println(c);
            itemQuantity.setEditable(true);
        }
        String a=itemQuantity.getText();
    }//GEN-LAST:event_itemQuantityKeyPressed

    private void itemPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemPriceKeyPressed
        char dat=evt.getKeyChar();
        System.out.println(dat);

        if(Character.isLetter(dat)){
            itemPrice.setEditable(false);
        }else{
            itemPrice.setEditable(true);
        }
        int c=evt.getKeyCode();
        if(!(c>47 && c<58 || c==8)){
            itemPrice.setEditable(false);
            message("Enter Number only");
            itemPrice.setEditable(true);
        }else{
            System.out.println(c);
            itemPrice.setEditable(true);
        }
        String a=itemPrice.getText();
       
    }//GEN-LAST:event_itemPriceKeyPressed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
            addItem();
    }//GEN-LAST:event_addBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        deleteItem();                   // deleting items
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        clearValue();       // clearing the values
    }//GEN-LAST:event_clearBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
            home.setVisible(true);   
            addItem.setVisible(false);
            bakeryItem.setVisible(false);
    }//GEN-LAST:event_backBtnActionPerformed

    private void openMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuActionPerformed
        JFileChooser chooser = new JFileChooser(); // choosing file 
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV Files", "csv");  // filter the file format
        chooser.setFileFilter(filter);
        
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        
        if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            try {
                File selectedFile = chooser.getSelectedFile();
                try (Scanner input = new Scanner(selectedFile)) {  // reads the selected csv file
                    while(input.hasNext()) {
                        String line = input.nextLine();
                        String[] values = line.split(",");
                        model.addRow(new Object[] {values[0], values[1], values[2], values[3], values[4], values[5]});
                    }
                    message("File has been imported successfully.");
                }
            } catch (FileNotFoundException ex) {
                message("File Not found");
            }
        }
    }//GEN-LAST:event_openMenuActionPerformed

    private void btnCakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCakeActionPerformed
        // code for display cake items
        String cc= "";
        if(btnCake.isSelected()){
          cc="Cakes";
       
          int searchIndex = 1;
          int rows = jTable.getRowCount();
          int datarows = 0;
          int n = 1;
          
          for(int i = 0;i< rows ; i++){
          if((jTable.getValueAt(i, searchIndex)) == null){ break;}  // checking null value
          datarows++;
          }
         
          String displayItem = "";
          for (int i = 0; i < datarows; i++)
                if(((String)jTable.getValueAt(i, searchIndex)).equals(cc)){
                    displayItem += n + ") "+" "+((String) jTable.getValueAt(i, 0))+"\n";
                    n++;
                    }
          
          if(!"".equals(displayItem))
              JOptionPane.showMessageDialog(this,displayItem,(n-1)+" Items in "+cc+" category:",JOptionPane.INFORMATION_MESSAGE);
          else
              JOptionPane.showMessageDialog(this,"There are not any items related to "+cc+" Category ","Message",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnCakeActionPerformed

    private void btnMuffinsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMuffinsActionPerformed
         // code for display muffins items
        String cc= "";
        if(btnMuffins.isSelected()){
          cc="Muffins";
       
          int searchIndex = 1;
          int rows = jTable.getRowCount();
          int datarows = 0;
          int n = 1;
          
          for(int i = 0;i< rows ; i++){
          if((jTable.getValueAt(i, searchIndex)) == null){ break;}
          datarows++;
          }
          
          String displayItem = "";
          for (int i = 0; i < datarows; i++)
                if(((String)jTable.getValueAt(i, searchIndex)).equals(cc)){
                    displayItem += n + ") "+" "+((String) jTable.getValueAt(i, 0))+"\n"; // displaying items
                    n++;
                    }
          
          if(!"".equals(displayItem))
              JOptionPane.showMessageDialog(this,displayItem,(n-1)+" Items in "+cc+" category:",JOptionPane.INFORMATION_MESSAGE);
          else
              JOptionPane.showMessageDialog(this,"There are not any items related to "+cc+" Category ","Message",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnMuffinsActionPerformed

    private void btnCookiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCookiesActionPerformed
          // code for display cookies items 
        String cc= "";
        if(btnCookies.isSelected()){
          cc="Cookies";
       
          int searchIndex = 1;
          int rows = jTable.getRowCount();
          int datarows = 0;
          int n = 1;
          
          for(int i = 0;i< rows ; i++){
          if((jTable.getValueAt(i, searchIndex)) == null){ break;}
          datarows++;
          }
          
          String displayItem = "";
          for (int i = 0; i < datarows; i++)
                if(((String)jTable.getValueAt(i, searchIndex)).equals(cc)){
                    displayItem += n + ") "+" "+((String) jTable.getValueAt(i, 0))+"\n";
                    n++;
                    }
          
          if(!"".equals(displayItem))
              JOptionPane.showMessageDialog(this,displayItem,(n-1)+" Items in "+cc+" category:",JOptionPane.INFORMATION_MESSAGE);
          else
              JOptionPane.showMessageDialog(this,"There are not any items related to "+cc+" Category ","Message",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnCookiesActionPerformed

    private void btnBreadsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBreadsActionPerformed
          // code for display breads items
        String cc= "";
        if(btnBreads.isSelected()){
          cc="Breads";
       
          int searchIndex = 1;
          int rows = jTable.getRowCount();
          int datarows = 0;
          int n = 1;
          
          for(int i = 0;i< rows ; i++){
          if((jTable.getValueAt(i, searchIndex)) == null){ break;}
          datarows++;
          }
          
          String displayItem = "";
          for (int i = 0; i < datarows; i++)
                if(((String)jTable.getValueAt(i, searchIndex)).equals(cc)){
                    displayItem += n + ") "+" "+((String) jTable.getValueAt(i, 0))+"\n";
                    n++;
                    }
          
          if(!"".equals(displayItem))
              JOptionPane.showMessageDialog(this,displayItem,(n-1)+" Items in "+cc+" category:",JOptionPane.INFORMATION_MESSAGE);
          else
              JOptionPane.showMessageDialog(this,"There are not any items related to "+cc+" Category ","Message",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnBreadsActionPerformed

    private void btnDoughnutsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoughnutsActionPerformed
            // code for display doughnuts items 
        String cc= "";
        if(btnDoughnuts.isSelected()){
          cc="Doughnuts";
       
          int searchIndex = 1;
          int rows = jTable.getRowCount();
          int datarows = 0;
          int n = 1;
          
          for(int i = 0;i< rows ; i++){
          if((jTable.getValueAt(i, searchIndex)) == null){ break;}
          datarows++;
          }
          
          String displayItem = "";
          for (int i = 0; i < datarows; i++)
                if(((String)jTable.getValueAt(i, searchIndex)).equals(cc)){
                    displayItem += n + ") "+" "+((String) jTable.getValueAt(i, 0))+"\n";
                    n++;
                    }
          
          if(!"".equals(displayItem))
              JOptionPane.showMessageDialog(this,displayItem,(n-1)+" Items in "+cc+" category:",JOptionPane.INFORMATION_MESSAGE);
          else
              JOptionPane.showMessageDialog(this,"There are not any items related to "+cc+" Category ","Message",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnDoughnutsActionPerformed

    private void btnBrowniesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowniesActionPerformed
          // code for display brownies items
        String cc= "";
        if(btnBrownies.isSelected()){
          cc="Brownies";
          int searchIndex = 1;
          int rows = jTable.getRowCount();
          int datarows = 0;
          int n = 1;
          
          for(int i = 0;i< rows ; i++){
          if((jTable.getValueAt(i, searchIndex)) == null){ break;}
          datarows++;
          }
          
          String displayItem = "";
          for (int i = 0; i < datarows; i++)
                if(((String)jTable.getValueAt(i, searchIndex)).equals(cc)){
                    displayItem += n + ") "+" "+((String) jTable.getValueAt(i, 0))+"\n";
                    n++;
                    }
          
          if(!"".equals(displayItem))
              JOptionPane.showMessageDialog(this,displayItem,(n-1)+" Items in "+cc+" category:",JOptionPane.INFORMATION_MESSAGE);
          else
              JOptionPane.showMessageDialog(this,"There are not any items related to "+cc+" Category ","Message",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnBrowniesActionPerformed

    private void btnBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBinaryActionPerformed
          // code for binary search 
        String search =binarySearch.getText();
        int output= 0;
        
        ArrayList<String> outsideArray = new ArrayList<>();
        ArrayList<ArrayList<String>> insideArray = new ArrayList<>();
        
        
        for(int y=0; y<jTable.getRowCount(); y++) 
        {
            for(int x=0; x<jTable.getColumnCount(); x++) 
            {
                if(jTable.getModel().getValueAt(y,x)!=null)
                {
                    //adding rows and column in outsideArray
                    outsideArray.add(jTable.getModel().getValueAt(y, x).toString());
                }
            }
            if(outsideArray.size()>0)
            {
                //adding inside array to outside array
                insideArray.add(outsideArray);
            }
            //creating outside array empty
            outsideArray = new ArrayList<>();
        }
        
        for(int i=0; i<insideArray.size()-1; i++) 
        {
            int minPos = i;
            for(int j=i+1; j<insideArray.size(); j++) {
                if(Integer.parseInt(insideArray.get(j).get(4)) < Integer.parseInt(insideArray.get(minPos).get(4))) {
                    minPos = j;
                }
            }
            ArrayList<String> tempValue = insideArray.get(minPos);  
            insideArray.set(minPos, insideArray.get(i));
            insideArray.set(i, tempValue);
        }
        if("".equals(search)) 
        {
             message("Please enter price to search");
        } else {
                try {
                    int key = Integer.parseInt(search);
                    int start = 0;
                    int end = insideArray.size()-1;
                    int mid = (start+end)/2;

                    while(start<=end) {
                        if(Integer.parseInt(insideArray.get(mid).get(4))<key) {
                            start = mid + 1;
                        }else if(Integer.parseInt(insideArray.get(mid).get(4))==key) {
                            String name = (String) insideArray.get(mid).get(0);
                            String category = (String) insideArray.get(mid).get(1);
                            String ingredients = (String) insideArray.get(mid).get(2);
                            String quantity = (String) insideArray.get(mid).get(3);
                            String price = (String) insideArray.get(mid).get(4);
                           
                            JOptionPane.showMessageDialog(this,"Search Found\n\nPrice: "+ price+
                                        "\nName: "+name+
                                        "\nCategory: "+ category+
                                        "\nStar Ingredient: "+ ingredients
                                        +"\nQuantity: "+quantity,"Message",JOptionPane.INFORMATION_MESSAGE);
                            output=1;
                            break;
                        } else {
                            end = mid - 1;
                        }
                        mid = (start+end)/2;
                    } 
                 if(output ==0) {
                      message("There are not any items found");
                     } 
                    
                } catch(NumberFormatException e) {
                    message("Enter number to search price.");
                }
        }
       
    }//GEN-LAST:event_btnBinaryActionPerformed

    private void helpMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuActionPerformed
         // code for help menu button  
        try         
        {
            Desktop.getDesktop().open(new java.io.File("src/main/Help Manual.pdf"));    
        }catch(IOException e)
        {
            message("File not found");
        }
    }//GEN-LAST:event_helpMenuActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // code for exit menu button
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed
   
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
         // code for update button
        int i = jTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)jTable.getModel();
        if(i >= 0)
        {
            model.setValueAt(itemName.getText(), i, 0);
            model.setValueAt(itemIngredients.getText(), i, 2);
            model.setValueAt(itemPrice.getText(), i, 4);
            model.setValueAt(itemQuantity.getText(), i, 3);
            model.setValueAt((String)comboCategory.getSelectedItem(), i, 1);
     
            fF.setActionCommand("French Fries");
            wC.setActionCommand("Whipping Cream");
            hC.setActionCommand("Hot Chocolate");
            String toppings = toppingGroup.getSelection().getActionCommand();
            model.setValueAt(toppings, i, 5);
            JOptionPane.showMessageDialog(null, "Succesfully Updated");
            
        }else{
            JOptionPane.showMessageDialog(null, "Error");
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
         // code for mouse clicked in table
        int selectedRow = jTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)jTable.getModel();
        // getting values from jtable
        itemName.setText(model.getValueAt(selectedRow, 0).toString());
        comboCategory.setSelectedItem(model.getValueAt(selectedRow, 1).toString()); 
        itemIngredients.setText(model.getValueAt(selectedRow, 2).toString());
        itemQuantity.setText(model.getValueAt(selectedRow, 3).toString());
        itemPrice.setText(model.getValueAt(selectedRow, 4).toString());
        model.getValueAt(selectedRow, 5);
        if (fF.isSelected())                  
        {
            fF.setSelected(true);
           
        }else if (wC.isSelected())
        {
            wC.setSelected(true);
        }
        else 
            hC.setSelected(true);
         
    }//GEN-LAST:event_jTableMouseClicked

    private void fFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fFActionPerformed
    fF.setSelected(true);
    }//GEN-LAST:event_fFActionPerformed
   public void clearValue(){
        // code for clearing all the values.
        itemIngredients.setText(null);
        itemName.setText(null);
        itemPrice.setText(null);
        itemQuantity.setText(null);
        toppingGroup.clearSelection();
        comboCategory.setSelectedIndex(0);
   }
   public void addItem(){
       // code for adding items
            String name = itemName.getText();
            String category = (String)comboCategory.getSelectedItem();
            String starIngredients = itemIngredients.getText();
            String quantity=itemQuantity.getText();
            String price=itemPrice.getText();
            String toppings="";
            if (fF.isSelected()){
            toppings="French Fries";
             }
            if (wC.isSelected()){
            toppings="Whipping Cream";
            }
            if (hC.isSelected()){
            toppings="Hot Chocolates";
            }
            // checking empty fields
            if("".equals(name) &&  "Select Category".equals(category) && "".equals(starIngredients) && "".equals(quantity) && "".equals(price) && "".equals(toppings) ){
            JOptionPane.showMessageDialog(null,"Please Fill All fields");
            } else if("".equals(name)){
                JOptionPane.showMessageDialog(null,"Please Fill Item Name");
            } else if("Select Category".equals(category)){
                JOptionPane.showMessageDialog(null,"Please select Item Category");
            } else if("".equals(starIngredients)){
                JOptionPane.showMessageDialog(null,"Please Fill Star Ingredients");
            } else if("".equals(quantity))
            {
                JOptionPane.showMessageDialog(null,"Please Fill Item Quantity");
            } else if("".equals(price))
            {
                JOptionPane.showMessageDialog(null,"Please Fill Item Price");
            } else if("".equals(toppings))
            {
                JOptionPane.showMessageDialog(null,"Please Select Toppings");
            }else if( "".equals(name) || "Select Category".equals(category) || "".equals(starIngredients) || "".equals(quantity) || "".equals(price) || "".equals(toppings) ){
                JOptionPane.showMessageDialog(null,"Please Fill Missing fields");
            }else{
                                       //adding items
                    String checkValidation = "";
                    boolean itemExist = false;
                    for (int i=0; i<jTable.getRowCount(); i++) 
                    {       
                        checkValidation = jTable.getValueAt(i, 0).toString().trim();
                        if(itemName.getText().equals(checkValidation))
                        {
                         itemExist = true;
                        break;
                         }
                    }    //if item is not in the table
                    if(!itemExist)
                    {
                       DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                       model.addRow(new Object[] {name, category,starIngredients , quantity, price,toppings});
                       message("Item added Successfully");
                      
                    }
                    else 
                    {
                       JOptionPane.showMessageDialog(null, "Item already exist.","Message",JOptionPane.INFORMATION_MESSAGE);
                    }
            }       
       
   }
   public void deleteItem(){
       // code for deleting item
       if(jTable.getSelectionModel().isSelectionEmpty())
            {
                JOptionPane.showMessageDialog(this,"Select Item to delete ","Message",JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
            int row = jTable.getSelectedRow();
            int modelRow = jTable.convertRowIndexToModel( row );
            DefaultTableModel model = (DefaultTableModel)jTable.getModel();
             model.removeRow( modelRow );  
             message("Successfully deleted");
        }
        
   }
   
    public void message(String message) {
     JOptionPane.showMessageDialog(null, message);     
    }
    
    /**
     * @param args the command line arguments
     */
  public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Program.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Program.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Program.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Program.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bakery().setVisible(true);
            }
        });
    }
    // swtich color between active buttom
    private void setColor(JPanel pane)
    {
        pane.setBackground(new Color(153,51,0));
    }
    
    // switch color to inactive button
    private void resetColor(JPanel [] pane)
    {
        for(int i=0;i<pane.length;i++){
           pane[i].setBackground(new Color(102,51,0));
           
        } 
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JPanel addItem;
    private javax.swing.JLabel address;
    private javax.swing.JButton backBtn;
    private javax.swing.JPanel bakeryItem;
    private javax.swing.JLabel bakeryName;
    private javax.swing.JTextField binarySearch;
    private javax.swing.JButton btnBinary;
    private javax.swing.JRadioButton btnBreads;
    private javax.swing.JRadioButton btnBrownies;
    private javax.swing.JRadioButton btnCake;
    private javax.swing.JRadioButton btnCookies;
    private javax.swing.JRadioButton btnDoughnuts;
    private javax.swing.JRadioButton btnMuffins;
    private javax.swing.ButtonGroup categoryGroup;
    private javax.swing.JPanel centerPanel;
    private javax.swing.JButton clearBtn;
    private javax.swing.JComboBox<String> comboCategory;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JMenu editMenu;
    private javax.swing.JLabel email;
    private javax.swing.JCheckBox fF;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JCheckBox hC;
    private javax.swing.JMenuItem helpMenu;
    private javax.swing.JPanel home;
    private javax.swing.JPanel homeBtn;
    private javax.swing.JPanel itemBtn;
    private javax.swing.JTextField itemIngredients;
    private javax.swing.JTextField itemName;
    private javax.swing.JTextField itemPrice;
    private javax.swing.JTextField itemQuantity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JLabel phnNumber;
    private javax.swing.JPanel tableBtn;
    private javax.swing.ButtonGroup toppingGroup;
    private javax.swing.JButton updateBtn;
    private javax.swing.JCheckBox wC;
    // End of variables declaration//GEN-END:variables
  
}
